<!--
	Configuration file for libinput-gestures.

	The default configuration file exists at "/etc/libinput-gestures.conf", but a user
	can create a personal custom configuration file at "~/.config/libinput-gestures.conf".

	Root tag must be "libinput" and each gesture tag should be nested inside the
	application tag. The root tag also supports optional "device" attribute which should be list
	of device names.

	"name" attribute of "application" tag needs to be a list of commands, where each command
	is the output of: 'ps -o comm= -q $WINDOW_PID' and seperated by ','. If name
	attribute is missing, then that application tag refers to the global application, that is
	the gestures and devices are configured for all applications.

	A "gesture" tag denotes the basic unit of event, which the libinput script will sense from the
	configured devices, usually touchpad. Since the keyboard gestures are easily configured using
	most Desktop managers, libinput-gestures internally handles the keypress events to avoid conflicts.
	The "gesture" tag currently supports following attributes:
	1. * "type": One of 'swipe', 'pointer', 'pinch', 'shape'
	2. * "motion": Depends on "type"...
			- "swipe": 'left', 'right', 'up', 'down', 'left_up', 'right_up', 'left_down', 'right_down'
			- "pointer": 'tap', 'double_tap', 'triple_tap', 'quadruple_tap'
			- "pinch": 'in', 'out', 'clockwise', 'anticlockwise'
	3. "trigger": A string, representing the last-executed gesture event in the form of
			'{type} {motion} {fingers}', to ensure that this gesture executes in the chain of previous
			gesture.
	4. "held_key": A required key press to execute this gesture.
	5. "description": Just a nice way to provide descriptive information to the configured gesture.

	6. "fingers": [Only for 'swipe' type] A digit, less than 5, denoting the required number of fingers to be used
			for this gesture.
	7. "button": [Only for 'pointer' type] One of 'LEFT', 'MIDDLE' or 'RIGHT'.

	Note that "type" and "motion" are required attributes and define the type of gesture to detect,
	whereas "fingers", "trigger" and "held_key" define the specific condition for this particular gesture
	to be selected.
	
	"gesture" tag also needs to have nested "command" tags, whose values are just plain
	shell commands to execute when the gesture is detected and are executed in order of their listing.
	Typically command will be xdotool, or wmctrl. See "man xdotool" for the many things you can do with that tool.
	Note that unfortunately xdotool does not work with native Wayland clients.
-->

<libinput>
	<application>
		<gesture 
			type = "swipe"
			motion = "left"
			fingers = "3"
		>
			<command>xdotool key alt+Tab</command>
		</gesture>
		<gesture 
			type = "swipe"
			motion = "right"
			fingers = "3"
		>
			<command>xdotool key alt+Tab+shift</command>
		</gesture>
		<gesture
			type = "pinch"
			motion = "in"
			description = "Show Desktop"
		>
			<command>xdotool key ctrl+F12</command>
		</gesture>
		<gesture
			type = "pinch"
			motion = "out"
			description = "Toggle fullscreen"
		>
			<command>xdotool key F11</command>
		</gesture>
		<gesture
			type = "swipe"
			motion = "down"
			fingers = "3"
		>
			<command>xdotool key ctrl+F7</command>
		</gesture>
		<gesture
			type = "swipe"
			motion = "up"
			fingers = "3"
			description = "KDE: Present windows (current application)"
		>
			<command>xdotool key ctrl+F9</command>
		</gesture>
		<gesture
			type = "pointer"
			motion = "double_tap"
			button = "left"
			held_key = "leftctrl"
		>
			<command>xdotool key super+space</command>
		</gesture>
		<gesture
			type = "pointer"
			motion = "triple_tap"
			button = "middle"
		>
			<command>xdotool key alt+space</command>
		</gesture>
		<gesture
			type = "shape"
			held_key = "leftalt"
			strokes = ""
		>
			<command>echo echo</command>
		</gesture>
	</application>

	<application name="firefox, subl3, yakuake, electron">
		<gesture
			type = "swipe"
			motion = "down"
			fingers = "4"
			description = "Move forward a tab"
		>
			<command>xdotool key ctrl+Tab</command>
		</gesture>
		<gesture
			type = "swipe"
			motion = "up"
			fingers = "4"
			description = "Move backward a tab"
		>
			<command>xdotool key ctrl+shift+Tab</command>
		</gesture>
		<gesture
			type = "pinch"
			motion = "clockwise"
		>
			<command>xdotool key ctrl+n</command>
		</gesture>
		<gesture
			type = "pinch"
			motion = "anticlockwise"
		>
			<command>xdotool key ctrl+w</command>
		</gesture>
	</application>
	<application name = "yakuake">
		<gesture
			type = "pinch"
			motion = "anticlockwise"
		>
			<command>xdotool key ctrl+W</command>
		</gesture>
	</application>
	<application name = "firefox">
		<gesture 
			type = "swipe"
			motion = "left"
			fingers = "4"
		>
			<command>xdotool key alt+Right</command>
		</gesture>
		<gesture 
			type = "swipe"
			motion = "right"
			fingers = "4"
		>
			<command>xdotool key alt+Left</command>
		</gesture>
		<gesture
			type = "pinch"
			motion = "clockwise"
		>
			<command>xdotool key ctrl+t</command>
		</gesture>
	</application>
	<application name="vlc">
		<gesture
			type = "pinch"
			motion = "clockwise"
		>
			<command>xdotool key --clearmodifiers XF86AudioRaiseVolume</command>
		</gesture>
		<gesture
			type = "pinch"
			motion = "anticlockwise"
		>
			<command>xdotool key --clearmodifiers XF86AudioLowerVolume</command>
		</gesture>
		<gesture
			type = "pinch"
			motion = "out"
			description = "Toggle fullscreen"
		>
			<command>xdotool key f</command>
		</gesture>
	</application>
</libinput>
